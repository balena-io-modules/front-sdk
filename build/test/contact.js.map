{"version":3,"sources":["test/contact.ts"],"names":[],"mappings":";;AAEA,2BAA6B;AAC7B,iDAAmD;AACnD,iBAAe;AACf,sCAA0D;AAC1D,mCAAqC;AAErC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AACzB,IAAI,CAAC,MAAM,EAAE,CAAC;AAEd,QAAQ,CAAC,UAAU,EAAE;IACpB,IAAM,WAAW,GAAG,kBAAS,EAAE,CAAC;IAChC,IAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;IAC9B,IAAI,SAAgB,CAAC;IACrB,IAAI,SAAiB,CAAC;IAEtB,MAAM,CAAC;QACN,SAAS,GAAG,IAAI,aAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE;QAC7B,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC;YAC/B,OAAO,EAAE;gBACR;oBACC,MAAM,EAAE,kBAAkB;oBAC1B,MAAM,EAAE,OAAO;iBACf;aACD;SACD,CAAC,CAAC,IAAI,CAAC,UAAU,OAAgB;YACjC,SAAS,GAAG,OAAO,CAAC,EAAE,CAAC;YACvB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;YACrB,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE;QACrC,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC;YAC/B,UAAU,EAAE,SAAS;YACrB,IAAI,EAAE,cAAc;SACpB,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE;QAClC,OAAO,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC;YAC5B,UAAU,EAAE,SAAS;SACrB,CAAC,CAAC,IAAI,CAAC,UAAU,OAAgB;YACjC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;YACrB,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACvC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE;QACrC,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC;YAC/B,UAAU,EAAE,SAAS;SACrB,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE;QACnD,OAAO,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC;YAC5B,UAAU,EAAE,SAAS;SACrB,CAAC,CAAC,KAAK,CAAC,kBAAU,EAAE,UAAC,KAAiB;YACtC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;YACnC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","file":"contact.js","sourcesContent":["// Needed due to chai's should.exist\n/* tslint:disable: no-unused-expression */\nimport * as chai from 'chai';\nimport * as ChaiAsPromised from 'chai-as-promised';\nimport 'mocha';\nimport { Contact, Front, FrontError } from '../lib/index';\nimport { getKeeper } from './keeper';\n\nchai.use(ChaiAsPromised);\nchai.should();\n\ndescribe('Contacts', function () {\n\tconst vaultKeeper = getKeeper();\n\tconst keys = vaultKeeper.keys;\n\tlet frontInst: Front;\n\tlet contactId: string;\n\n\tbefore(function () {\n\t\tfrontInst = new Front(keys.apiKey);\n\t});\n\n\tit('should create a contact', function() {\n\t\treturn frontInst.contact.create({\n\t\t\thandles: [\n\t\t\t\t{\n\t\t\t\t\thandle: 'test@example.com',\n\t\t\t\t\tsource: 'email'\n\t\t\t\t}\n\t\t\t]\n\t\t}).then(function (contact: Contact) {\n\t\t\tcontactId = contact.id;\n\t\t\tcontact.should.exist;\n\t\t\tcontact.handles.length.should.be.gt(0);\n\t\t});\n\t});\n\n\tit('should update the contact above', function() {\n\t\treturn frontInst.contact.update({\n\t\t\tcontact_id: contactId,\n\t\t\tname: 'test example'\n\t\t});\n\t});\n\n\tit('should get the contact above', function() {\n\t\treturn frontInst.contact.get({\n\t\t\tcontact_id: contactId,\n\t\t}).then(function (contact: Contact) {\n\t\t\tcontact.should.exist;\n\t\t\tcontact.handles.length.should.be.gt(0);\n\t\t\tcontact.name.should.eq('test example');\n\t\t});\n\t});\n\n\tit('should delete the contact above', function() {\n\t\treturn frontInst.contact.delete({\n\t\t\tcontact_id: contactId,\n\t\t});\n\t});\n\n\tit('should fail to find the contact deleted above', function() {\n\t\treturn frontInst.contact.get({\n\t\t\tcontact_id: contactId,\n\t\t}).catch(FrontError, (error: FrontError) => {\n\t\t\terror.name.should.eq('FrontError');\n\t\t\terror.status.should.eq(404);\n\t\t});\n\t});\n});\n"],"sourceRoot":"../../lib"}