{"version":3,"sources":["test/event.ts"],"names":[],"mappings":"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","file":"event.js","sourcesContent":["// Needed due to chai's should.exist\n/* tslint:disable: no-unused-expression */\nimport * as chai from 'chai';\nimport * as ChaiAsPromised from 'chai-as-promised';\nimport * as express from 'express';\nimport 'mocha';\nimport { Front } from '../lib/index';\nimport { getKeeper } from './keeper';\n\nchai.use(ChaiAsPromised);\nchai.should();\n\ndescribe('Events', function () {\n\tconst vaultKeeper = getKeeper();\n\tconst keys = vaultKeeper.keys;\n\tlet frontInst: Front;\n\n\tbefore(function () {\n\t\tfrontInst = new Front(keys.apiKey, 'madeupkey');\n\t});\n\n\tit('should fail as no secret key is set', function (done) {\n\t\tconst brokenInst = new Front(keys.apiKey);\n\t\ttry {\n\t\t\tbrokenInst.registerEvents({ port: 1234 }, () => {\n\t\t\t\tdone('Should not have received an event');\n\t\t\t});\n\t\t} catch (err) {\n\t\t\terr.message.should.eq('No secret key registered');\n\t\t\tdone();\n\t\t}\n\t});\n\n\tit('should fail as neither the port or server instance are set', function (done) {\n\t\ttry {\n\t\t\tfrontInst.registerEvents({}, () => {\n\t\t\t\tdone('Should not have received an event');\n\t\t\t});\n\t\t} catch (err) {\n\t\t\terr.message.should.eq('Pass either an Express instance or a port to listen on');\n\t\t\tdone();\n\t\t}\n\t});\n\n\tit('should fail as both the port or server instance are set', function (done) {\n\t\ttry {\n\t\t\tfrontInst.registerEvents({ server: express(), port: 1234 }, () => {\n\t\t\t\tdone('Should not have received an event');\n\t\t\t});\n\t\t} catch (err) {\n\t\t\terr.message.should.eq('Pass either an Express instance or a port to listen on');\n\t\t\tdone();\n\t\t}\n\t});\n\n\tit('should start a new server on port 1234 then exit', function (done) {\n\t\tconst expressInst = frontInst.registerEvents({ port: 1234 }, () => {\n\t\t\tdone('Should not have received an event');\n\t\t});\n\t\tif (expressInst) {\n\t\t\tsetTimeout(function () {\n\t\t\t\texpressInst.close();\n\t\t\t\tdone();\n\t\t\t}, 2000);\n\t\t} else {\n\t\t\tdone('Should have been returned an Express instance');\n\t\t}\n\t});\n\n\tit('should listen on existing server then exit', function (done) {\n\t\tconst expressInst = express();\n\t\tconst httpServer = expressInst.listen(1234);\n\t\tfrontInst.registerEvents({ server: expressInst }, () => {\n\t\t\tdone('Should not have received an event');\n\t\t});\n\t\tsetTimeout(function () {\n\t\t\thttpServer.close();\n\t\t\tdone();\n\t\t}, 2000);\n\t});\n});\n"],"sourceRoot":"../../lib"}