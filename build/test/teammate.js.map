{"version":3,"sources":["test/teammate.ts"],"names":[],"mappings":";;AAEA,2BAA6B;AAC7B,iDAAmD;AACnD,iBAAe;AACf,8BAAoD;AACpD,mCAAqC;AAErC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AACzB,IAAI,CAAC,MAAM,EAAE,CAAC;AAEd,QAAQ,CAAC,WAAW,EAAE;IACrB,IAAM,WAAW,GAAG,kBAAS,EAAE,CAAC;IAChC,IAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;IAC9B,IAAI,SAAgB,CAAC;IACrB,IAAI,UAAkB,CAAC;IACvB,IAAI,SAAiB,CAAC;IAEtB,MAAM,CAAC;QACN,SAAS,GAAG,IAAI,WAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE;QAC3B,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,EAC7B,CAAC,IAAI,CAAC,UAAS,SAAoB;YACnC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;YAChC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC1C,UAAU,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACtC,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;QAC9C,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE;QAC9C,OAAO,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC;YAC7B,WAAW,EAAE,UAAU;SACvB,CAAC,CAAC,IAAI,CAAC,UAAS,QAAkB;YAClC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;YAClC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE;QACjD,OAAO,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;YAChC,UAAU,EAAE,MAAM;YAClB,WAAW,EAAE,UAAU;SACvB,CAAC,CAAC,IAAI,CAAC;YACP,OAAO,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAC7B,WAAW,EAAE,UAAU;aACvB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,QAAkB;YAClC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC,IAAI,CAAC;YACP,OAAO,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAChC,UAAU,EAAE,SAAS;gBACrB,WAAW,EAAE,UAAU;aACvB,CAAC,CAAC;QACJ,CAAC,CAAC;aACD,IAAI,CAAC;YACL,OAAO,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAC7B,WAAW,EAAE,UAAU;aACvB,CAAC,CAAC;QACJ,CAAC,CAAC;aACD,IAAI,CAAC,UAAS,QAAkB;YAChC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","file":"teammate.js","sourcesContent":["// Needed due to chai's should.exist\n/* tslint:disable: no-unused-expression */\nimport * as chai from 'chai';\nimport * as ChaiAsPromised from 'chai-as-promised';\nimport 'mocha';\nimport { Front, Teammate, Teammates } from '../lib';\nimport { getKeeper } from './keeper';\n\nchai.use(ChaiAsPromised);\nchai.should();\n\ndescribe('Teammates', function () {\n\tconst vaultKeeper = getKeeper();\n\tconst keys = vaultKeeper.keys;\n\tlet frontInst: Front;\n\tlet teammateId: string;\n\tlet priorName: string;\n\n\tbefore(function () {\n\t\tfrontInst = new Front(keys.apiKey);\n\t});\n\n\tit('should list teammates', function() {\n\t\treturn frontInst.teammate.list(\n\t\t).then(function(teammates: Teammates) {\n\t\t\tteammates._results.should.exist;\n\t\t\tteammates._results.length.should.be.gt(0);\n\t\t\tteammateId = teammates._results[0].id;\n\t\t\tpriorName = teammates._results[0].first_name;\n\t\t});\n\t});\n\n\tit('should get the first teammate from above', function() {\n\t\treturn frontInst.teammate.get({\n\t\t\tteammate_id: teammateId\n\t\t}).then(function(teammate: Teammate) {\n\t\t\tteammate.id.should.eq(teammateId);\n\t\t\tteammate.first_name.should.eq(priorName);\n\t\t});\n\t});\n\n\tit('should update the first teammate from above', function() {\n\t\treturn frontInst.teammate.update({\n\t\t\tfirst_name: 'test',\n\t\t\tteammate_id: teammateId,\n\t\t}).then(function() {\n\t\t\treturn frontInst.teammate.get({\n\t\t\t\tteammate_id: teammateId,\n\t\t\t});\n\t\t}).then(function(teammate: Teammate) {\n\t\t\tteammate.first_name.should.eq('test');\n\t\t}).then(function() {\n\t\t\treturn frontInst.teammate.update({\n\t\t\t\tfirst_name: priorName,\n\t\t\t\tteammate_id: teammateId\n\t\t\t});\n\t\t})\n\t\t.then(function() {\n\t\t\treturn frontInst.teammate.get({\n\t\t\t\tteammate_id: teammateId\n\t\t\t});\n\t\t})\n\t\t.then(function(teammate: Teammate) {\n\t\t\tteammate.first_name.should.eq(priorName);\n\t\t});\n\t});\n});\n"],"sourceRoot":"../../lib"}