{"version":3,"sources":["test/conversation.ts"],"names":[],"mappings":"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","file":"conversation.js","sourcesContent":["// Needed due to chai's should.exist\n/* tslint:disable: no-unused-expression */\nimport * as chai from 'chai';\nimport * as ChaiAsPromised from 'chai-as-promised';\nimport * as _ from 'lodash';\nimport 'mocha';\nimport { Author, Comment, Conversation, ConversationComments,\n\tConversationFollowers, ConversationInboxes, ConversationMessages,\n\tConversations, Front, Message } from '../lib/index';\nimport { getKeeper } from './keeper';\n\nchai.use(ChaiAsPromised);\nchai.should();\n\ndescribe('Conversations', function () {\n\tconst vaultKeeper = getKeeper();\n\tconst keys = vaultKeeper.keys;\n\tlet frontInst: Front;\n\n\tbefore(function () {\n\t\tfrontInst = new Front(keys.apiKey);\n\t});\n\n\tit('should list all conversations', function () {\n\t\treturn frontInst.conversation.list().then(function (response: Conversations) {\n\t\t\tresponse._pagination.should.exist;\n\t\t\tresponse._pagination.should.have.keys('prev', 'next');\n\t\t\tresponse._links.should.exist;\n\t\t\tresponse._links.should.have.key('self');\n\t\t\tresponse._results.should.exist;\n\t\t\tresponse._results.length.should.be.gt(0);\n\t\t});\n\t});\n\n\tit('should list all unassigned conversations with a 1 entry per page limit', function () {\n\t\treturn frontInst.conversation.list({\n\t\t\tlimit: 1,\n\t\t\tq: 'q[statuses]=unassigned',\n\t\t}).then(function (response: Conversations) {\n\t\t\tresponse._pagination.should.exist;\n\t\t\tresponse._pagination.should.have.keys('prev', 'next');\n\t\t\tresponse._links.should.exist;\n\t\t\tresponse._links.should.have.key('self');\n\t\t\tresponse._results.should.exist;\n\t\t\tresponse._results.length.should.be.eq(1);\n\t\t});\n\t});\n\n\t// API docs, at the moment, list a default pagination of 50, but this test doesn't assume that is stringent.\n\tit('should list a decent quantity of recent conversations', function () {\n\t\treturn frontInst.conversation.listRecent().then(function (response: Conversations) {\n\t\t\tresponse._results.should.exist;\n\t\t\tresponse._results.length.should.be.gt(9);\n\t\t});\n\t});\n\n\tit('should get the conversation previously created in the Messages tests', function () {\n\t\tif (!keys.testConversationId) {\n\t\t\tthrow new Error('Cannot find conversation ID');\n\t\t}\n\t\treturn frontInst.conversation.get({ conversation_id: keys.testConversationId })\n\t\t.then(function (response: Conversation) {\n\t\t\tresponse._links.should.exist;\n\t\t\tresponse._links.should.have.keys('self', 'related');\n\t\t\tresponse.id.should.eq(keys.testConversationId);\n\t\t\tresponse.subject.should.eq(keys.testMessageSubject);\n\t\t\tresponse.status.should.exist;\n\t\t\tresponse.recipient.should.exist;\n\t\t\tresponse.last_message.should.exist;\n\t\t\tresponse.last_message.id.should.exist;\n\t\t\tresponse.last_message.body.should.eq(keys.testMessageResponse);\n\t\t\tresponse.created_at.should.exist;\n\t\t});\n\t});\n\n\tit('should list all the comments in the conversation', function () {\n\t\tif (!keys.testConversationId) {\n\t\t\tthrow new Error('Cannot find conversation ID');\n\t\t}\n\t\treturn frontInst.conversation.listComments({ conversation_id: keys.testConversationId })\n\t\t.then(function (response: ConversationComments) {\n\t\t\tresponse._pagination.should.exist;\n\t\t\tresponse._pagination.should.have.keys('prev', 'next');\n\t\t\tresponse._links.should.exist;\n\t\t\tresponse._links.should.have.key('self');\n\t\t\tresponse._results.should.exist;\n\t\t\tresponse._results.length.should.be.gt(0);\n\t\t\tresponse._results.should.satisfy(function (results: Comment[]) {\n\t\t\t\treturn _.find(results, ['id', keys.testCommentId]);\n\t\t\t});\n\t\t});\n\t});\n\n\tit('should list the inboxes in which the conversation appears', function () {\n\t\tif (!keys.testConversationId) {\n\t\t\tthrow new Error('Cannot find conversation ID');\n\t\t}\n\t\treturn frontInst.conversation.listInboxes({ conversation_id: keys.testConversationId })\n\t\t.then(function (response: ConversationInboxes) {\n\t\t\tresponse._pagination.should.exist;\n\t\t\tresponse._pagination.should.have.keys('prev', 'next');\n\t\t\tresponse._links.should.exist;\n\t\t\tresponse._links.should.have.key('self');\n\t\t\tresponse._results.should.exist;\n\t\t\tresponse._results.length.should.eq(1);\n\t\t\tresponse._results[0].id.should.eq(keys.testInboxId);\n\t\t\tresponse._results[0].name.should.eq(keys.testInbox);\n\t\t});\n\t});\n\n\tit('should list all the followers of a conversation', function() {\n\t\tif (!keys.testConversationId) {\n\t\t\tthrow new Error('Cannot find conversation ID');\n\t\t}\n\t\treturn frontInst.conversation.listFollowers({ conversation_id: keys.testConversationId })\n\t\t.then(function (response: ConversationFollowers) {\n\t\t\tresponse._pagination.should.exist;\n\t\t\tresponse._pagination.should.have.keys('prev', 'next');\n\t\t\tresponse._links.should.exist;\n\t\t\tresponse._links.should.have.key('self');\n\t\t\tresponse._results.should.exist;\n\t\t\tresponse._results.length.should.be.gte(1);\n\t\t\tresponse._results.should.satisfy(function (results: Author[]) {\n\t\t\t\treturn _.find(results, ['username', keys.testAuthor]);\n\t\t\t});\n\t\t});\n\t});\n\n\tit('should list all the messages in a conversation', function () {\n\t\tif (!keys.testConversationId) {\n\t\t\tthrow new Error('Cannot find conversation ID');\n\t\t}\n\t\treturn frontInst.conversation.listMessages({ conversation_id: keys.testConversationId })\n\t\t.then(function (response: ConversationMessages) {\n\t\t\tresponse._pagination.should.exist;\n\t\t\tresponse._pagination.should.have.keys('prev', 'next');\n\t\t\tresponse._links.should.exist;\n\t\t\tresponse._links.should.have.key('self');\n\t\t\tresponse._results.should.exist;\n\t\t\tresponse._results.length.should.be.gt(1);\n\t\t\tresponse._results.should.satisfy(function (results: Message[]) {\n\t\t\t\treturn _.find(results, ['body', keys.testMessageResponse]);\n\t\t\t});\n\t\t});\n\t});\n});\n"],"sourceRoot":"../../lib"}